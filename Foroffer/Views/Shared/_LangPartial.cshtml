@using System.Threading.Tasks
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.Parent.ToString() })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<div id="lans" title="@Localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form asp-controller="Home" asp-action="SetLanguage"
          asp-route-returnUrl="@returnUrl"
          method="post" class="form-horizontal">
        @Localizer[""] <select id="forlang" style="max-width: 40px" name="culture" onchange="this.form.submit();"
                               asp-for="@requestCulture.RequestCulture.UICulture.Name"
                               asp-items="cultureItems"></select>
    </form>
</div>
